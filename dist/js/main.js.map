{"version":3,"sources":["../../js/main.js"],"names":["towers","disks","n","moves","initiateGame","$","click","val","console","log","moveTower","clearAll","empty","height","x","push","disc","createDisk","JSON","stringify","width","disk","document","createElement","setAttribute","getElementById","append","moveDisk","source","dest","setTimeout","currentMoves","html","pop","prependTo","hide","show","diskValue","spare"],"mappings":";;AAAA,CAAC,YAAY;AACT;;AACA,QAAIA,SAAS,CAAC;AACVC,eAAO;AADG,KAAD,EAEX;AACEA,eAAO;AADT,KAFW,EAIX;AACEA,eAAO;AADT,KAJW,CAAb;AAAA,QAOIC,IAAI,EAPR;AAAA,QAQIC,QAAQ,CARZ;;AAUAC,iBAAaF,CAAb;;AAEAG,MAAE,SAAF,EAAaC,KAAb,CAAmB,YAAY;AAC3BJ,YAAIG,EAAE,SAAF,EAAaE,GAAb,EAAJ;AACAC,gBAAQC,GAAR,CAAYP,CAAZ;AACAE,qBAAaF,CAAb;AACH,KAJD;AAKAG,MAAE,QAAF,EAAYC,KAAZ,CAAkB,YAAY;AAC1BI,kBAAUR,IAAI,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACH,KAFD;;AAIA,aAASS,QAAT,GAAoB;AAChBX,iBAAS,CAAC,EAACC,OAAO,EAAR,EAAD,EAAc,EAACA,OAAO,EAAR,EAAd,EAA2B,EAACA,OAAO,EAAR,EAA3B,CAAT;AACAI,UAAE,SAAF,EAAaO,KAAb;AACAP,UAAE,SAAF,EAAaO,KAAb;AACAP,UAAE,SAAF,EAAaO,KAAb;AACH;;AAED,aAASR,YAAT,CAAsBS,MAAtB,EAA8B;AAC1BF;AACA,aAAK,IAAIG,IAAID,SAAS,CAAtB,EAAyBC,KAAK,CAA9B,EAAiCA,GAAjC,EAAsC;AAClCd,mBAAO,CAAP,EAAUC,KAAV,CAAgBc,IAAhB,CAAqBD,CAArB;AACH;AACD,aAAK,IAAIE,IAAT,IAAiBhB,OAAO,CAAP,EAAUC,KAA3B,EAAkC;AAC9BgB,uBAAWD,IAAX;AACH;AACDR,gBAAQC,GAAR,CAAYS,KAAKC,SAAL,CAAenB,MAAf,CAAZ;AACH;;AAED,aAASiB,UAAT,CAAoBG,KAApB,EAA2B;AACvB,YAAIC,OAAOC,SAASC,aAAT,CAAuB,KAAvB,CAAX;AACAF,aAAKG,YAAL,CAAkB,IAAlB,EAAwB,SAASJ,KAAjC;AACAC,aAAKG,YAAL,CAAkB,OAAlB,EAA2B,MAA3B;AACAF,iBAASG,cAAT,CAAwB,QAAxB,EAAkCC,MAAlC,CAAyCL,IAAzC;AACH;;AAED,aAASM,QAAT,CAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAC5B1B,iBAAS,CAAT;;AAEA2B,mBAAW,YAAY;AACnB,gBAAIC,eAAe1B,EAAE,QAAF,EAAY2B,IAAZ,EAAnB;AACA,gBAAIX,OAAOrB,OAAO4B,MAAP,EAAe3B,KAAf,CAAqBgC,GAArB,EAAX;AACAjC,mBAAO6B,IAAP,EAAa5B,KAAb,CAAmBc,IAAnB,CAAwBM,IAAxB;AACAhB,cAAE,UAAUgB,IAAZ,EAAkBa,SAAlB,CAA4B7B,EAAE,WAAWwB,IAAb,CAA5B,EAAgDM,IAAhD,GAAuDC,IAAvD,CAA4D,GAA5D;AACH,SALD,EAKGjC,QAAQ,IALX;AAMH;;AAED,aAASO,SAAT,CAAmB2B,SAAnB,EAA8BT,MAA9B,EAAsCC,IAAtC,EAA4CS,KAA5C,EAAmD;AAC/C,YAAID,cAAc,CAAlB,EAAqB;AACjBV,qBAASC,MAAT,EAAiBC,IAAjB;AACH,SAFD,MAEO;AACHnB,sBAAU2B,YAAY,CAAtB,EAAyBT,MAAzB,EAAiCU,KAAjC,EAAwCT,IAAxC;AACAF,qBAASC,MAAT,EAAiBC,IAAjB;AACAnB,sBAAU2B,YAAY,CAAtB,EAAyBC,KAAzB,EAAgCT,IAAhC,EAAsCD,MAAtC;AACH;AACJ;AACJ,CApED","file":"main.js","sourcesContent":["(function () {\r\n    'use strict'\r\n    let towers = [{\r\n        disks: []\r\n    },{\r\n        disks: []\r\n    },{\r\n        disks: []\r\n    }],\r\n        n = 10,\r\n        moves = 0\r\n\r\n    initiateGame(n)\r\n\r\n    $('#create').click(function () {\r\n        n = $('#height').val()\r\n        console.log(n)\r\n        initiateGame(n)\r\n    })\r\n    $('#solve').click(function () {\r\n        moveTower(n - 1, 0, 2, 1)\r\n    })\r\n\r\n    function clearAll() {\r\n        towers = [{disks: []}, {disks: []}, {disks: []}]\r\n        $('#tower0').empty()\r\n        $('#tower1').empty()\r\n        $('#tower2').empty()\r\n    }\r\n\r\n    function initiateGame(height) {\r\n        clearAll()\r\n        for (let x = height - 1; x >= 0; x--) {\r\n            towers[0].disks.push(x)\r\n        }\r\n        for (let disc in towers[0].disks) {\r\n            createDisk(disc)\r\n        }\r\n        console.log(JSON.stringify(towers))\r\n    }\r\n\r\n    function createDisk(width) {\r\n        let disk = document.createElement('div')\r\n        disk.setAttribute('id', \"disk\" + width)\r\n        disk.setAttribute('class', 'disk')\r\n        document.getElementById('tower0').append(disk)\r\n    }\r\n\r\n    function moveDisk(source, dest) {\r\n        moves += 1\r\n\r\n        setTimeout(function () {\r\n            let currentMoves = $('#moves').html()\r\n            let disk = towers[source].disks.pop()\r\n            towers[dest].disks.push(disk)\r\n            $('#disk' + disk).prependTo($('#tower' + dest)).hide().show(500)\r\n        }, moves * 1000)\r\n    }\r\n\r\n    function moveTower(diskValue, source, dest, spare) {\r\n        if (diskValue === 0) {\r\n            moveDisk(source, dest)\r\n        } else {\r\n            moveTower(diskValue - 1, source, spare, dest)\r\n            moveDisk(source, dest)\r\n            moveTower(diskValue - 1, spare, dest, source)\r\n        }\r\n    }\r\n})()\r\n"]}